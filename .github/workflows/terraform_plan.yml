name: Terraform Plan

on:
  pull_request:
    branches:
      - "**"
  push:
    branches:
      - main

jobs:
  terraform_plan:
    needs: test
    environment:
      name: prod
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.5.7"
      - name: Terraform Init
        run: terraform init
      - name: Zip the code
        working-directory: lambda
        run: sh make_zip.sh
      - name: Terraform Plan
        env:
          TF_VAR_aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          TF_VAR_aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_aws_region: ${{ vars.AWS_REGION }}
          TF_VAR_lambda_role_arn: ${{ secrets.LAMBDA_ROLE_ARN }}
          TF_VAR_scheduler_role_arn: ${{ secrets.SCHEDULER_ROLE_ARN }}
          TF_VAR_discord_webhook_url: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: terraform plan

      - name: Set output
        id: set-output
        run: echo "terraform_plan_status=success" >> $GITHUB_OUTPUT

      - name: Trigger Terraform Apply on main branch
        if: github.ref == 'refs/heads/main'
        uses: actions/github-script@v6
        with:
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'terraform_apply.yml',
              ref: 'main'
            })
